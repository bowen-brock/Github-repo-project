"""
A module for obtaining repo readme and language data from the github API.
Before using this module, read through it, and follow the instructions marked
TODO.
After doing so, run it like this:
    python acquire.py
To create the `data.json` file that contains the data.
"""
import os
import json
from typing import Dict, List, Optional, Union, cast
import requests

from env import github_token, github_username

# TODO: Make a github personal access token.
#     1. Go here and generate a personal access token: https://github.com/settings/tokens
#        You do _not_ need select any scopes, i.e. leave all the checkboxes unchecked
#     2. Save it in your env.py file under the variable `github_token`
# TODO: Add your github username to your env.py file under the variable `github_username`
# TODO: Add more repositories to the `REPOS` list below.

REPOS = [
    'acidanthera/AppleALC',
     'gongjianhui/AppleDNS',
     'tomaz/appledoc',
     'robovm/apple-ios-samples',
     'appleseedhq/appleseed',
     'JohnCoates/Aerial',
     'aaronfreimark/Apple-ID-AppleScript',
     'jmechner/Prince-of-Persia-Apple-II',
     'upekkha/AppleHardwareTest',
     'AsuharietYgvar/AppleNeuralHash2ONNX',
     'everettjf/AppleTrace',
     'apple/cups',
     'Pr0x13/iDict',
     'AppleWin/AppleWin',
     'kiwix/apple',
     'hexway/apple_bleee',
     'Musish/Musish',
     'ammulder/AppleIntelWiFiMVM',
     'acidanthera/AppleSupportPkg',
     'notnoop/java-apns',
     'linuxmint/cinnamon-spices-applets',
     'paradoxxxzero/gnome-shell-system-monitor-applet',
     'lucaspbordignon/rn-apple-healthkit',
     'tvillarete/apple-music-js',
     'WireGuard/wireguard-apple',
     'Sunnyyoung/AppleReserver',
     'insidegui/AppleEvents',
     'tonymillion/Reachability',
     'Run2948/wechat_applet',
     'bsquidwrd/Apple-ID-AppleScript',
     'joeljfischer/awesome-apple',
     'bazelbuild/rules_apple',
     'immobiliare/ApnsPHP',
     'invertase/react-native-apple-authentication',
     'microsoft/fluentui-apple',
     'ivanvorobei/SPStorkController',
     'wix/AppleSimulatorUtils',
     'lathoub/Arduino-AppleMIDI-Library',
     'danielgindi/Charts',
     'SwiftGGTeam/the-swift-programming-language-in-chinese',
     'microsoft/appcenter-sdk-apple',
     'lintide/ApplePayDemo',
     'MiceLiD/ofo-applet',
     'Willjay90/AppleFaceDetection',
     'nomad/houston',
     'bayetech/wechat_mall_applet',
     'Sioxas/AppleMusic',
     'richardtop/CalendarKit',
     'martinpaljak/AppletPlayground',
     'orff/AppleWatchFaces',
     'duzexu/ARuler',
     'whscullin/apple2js',
     'node-apn/node-apn',
     'icepy/Awsome-Apple-Develop-Guide',
     'kean/Pulse',
     'nomad/cupertino',
     'alexeyxo/protobuf-swift',
     'markdaws/arkit-by-example',
     'passepartoutvpn/passepartout-apple',
     'appium/appium-xcuitest-driver',
     'lucasderraugh/AppleProg-Cocoa-Tutorials',
     'ToanTech/py-apple-quadruped-robot',
     'bloominstituteoftechnology/React-Router-Apple-Nav',
     'beeware/Python-Apple-support',
     'cDima/Aerial',
     'imbushuo/mac-precision-touchpad',
     'CoderLN/Apple-GitHub-Codeidea',
     'KnuffApp/Knuff',
     'notpeter/apple-installer-checksums',
     'crmeb/CRMEB_WechatApplet',
     'unforswearing/applescript',
     'juhovh/shairplay',
     'squeek502/AppleSkin',
     'naveedgol/music-web-player',
     'simonbs/SBSAnimoji',
     'uxsoft/AppleWirelessKeyboard',
     'gamozolabs/applepie',
     'norfolkmustard/ApplePayJS',
     'corona-warn-app/cwa-app-android',
     'kevinjycui/bad-apple',
     'Kilian/f.lux-indicator-applet',
     'stripe-archive/ApplePayStubs',
     'nowsecure/node-applesign',
     'm3u8-segmenter/m3u8-segmenter',
     'maximkulkin/esp-homekit-demo',
     'kuglee/TermiWatch',
     'SocialiteProviders/Apple',
     'Piker-Alpha/AppleIntelInfo',
     'Telerik-Verified-Plugins/AppleWatch',
     'home-assistant/iOS',
     '37iOS/AppleParty',
     'nadimkobeissi/appleprivacyletter',
     'randomite/AppleWatchTutorialSeries',
     'peachananr/onepage-scroll',
     'Auntie-Player/apple-tv',
     'ThatGuySam/doesitarm',
     'gfjaru/Kiko',
     'bitzhuwei/CSharpGL',
     'jpoz/APNS',
     'ciderapp/Apple-Music-Electron',
     'kjhealy/apple',
     'plamoni/SiriProxy',
     'seemoo-lab/opendrop',
     'pedrommcarrasco/Brooklyn',
     'corona-warn-app/cwa-server',
     'opentrack/opentrack',
     'AppleDesignResources/SanFranciscoFont',
     'jwang/apn_on_rails',
     'sgan81/apfs-fuse',
     'ZhukV/AppleApnPush',
     'inaka/apns4erl',
     'NPCat/bad-apple-bot',
     'xiaolai/apple-computer-literacy',
     'faithfracture/Apple-Boost-BuildScript',
     'PopcornTimeTV/PopcornTimeTV',
     'swiftsocket/SwiftSocket',
     'zachomedia/apple-music-webplayer',
     'naoufal/react-native-touch-id',
     'grocer/grocer',
     'nhosoya/omniauth-apple',
     'DroidsOnRoids/MPParallaxView',
     'cjbeauchamp/ApplePayDemo',
     'eduvpn/apple',
     'BalestraPatrick/AppleWatchCalculator',
     'joshcarr/Apple-Quartz-Filters',
     'crystalidea/macs-fan-control',
     'learn-co-students/apples-and-holidays-v-000',
     'leimite/appleBigscreen',
     'gao0122/ARKit-Example-by-Apple',
     'corona-warn-app/cwa-app-ios',
     'hteen/apple-store-helper',
     'beltex/SMCKit',
     'CombineCommunity/rxswift-to-combine-cheatsheet',
     'tpoechtrager/cctools-port',
     'mongoose-os-apps/shelly-homekit',
     'geekape/applet-h5-shop',
     'GriffinLedingham/php-apple-signin',
     'TECLIB/CFPropertyList',
     'eleks/rnd-apple-watch-tesla',
     'espressif/esp-apple-homekit-adk',
     'vineetchoudhary/Downloader-for-Apple-Developers',
     'AppsFlyerSDK/AppsFlyerFramework',
     'Zren/plasma-applet-eventcalendar',
     'sauce-archives/isign',
     'ashleymills/Reachability.swift',
     'ananay/apple-auth',
     'learn-co-curriculum/apples-and-holidays',
     'dialogflow/dialogflow-apple-client',
     'gered/AppleWirelessKeyboard',
     'larryhou/swift',
     'zoul/Finch',
     'grych/AppStoreReviews',
     'zxystd/AppleIntelWifiAdapter',
     'hack-different/apple-knowledge',
     'philipWendland/IsoApplet',
     'lewismcgeary/AndroidtoAppleVectorLogo',
     'free5lot/hid-apple-patched',
     'ful1e5/apple_cursor',
     'tomersh/AppleGuice',
     'facebookarchive/xctool',
     'yanzhenjie/Kalle',
     'kevsmithpublic/MameAppleTV',
     'mate-desktop/mate-applets',
     'patchthecode/JTAppleCalendar',
     'azzoor/AppleEventInviteStickerPack',
     'evandcoleman/node-appletv',
     'tomgilder/flutter_apple_sign_in',
     'railsware/applepie',
     'ckinmind/apple-basket-redux',
     'hackedteam/vector-applet',
     'lupidan/apple-signin-unity',
     'abbeycode/AppleScripts',
     'gabrieloc/GIOVANNI',
     'openairplay/open-airplay',
     'LennonChin/AppleStore-Monitor',
     'squeek502/AppleCore',
     'noodlewerk/NWPusher',
     'serezhka/java-airplay-server',
     'TooTallNate/node-applescript',
     'Mixiaoxiao/Arduino-HomeKit-ESP8266',
     'Juanpe/About-SwiftUI',
     'passepartoutvpn/tunnelkit',
     'jflinter/ApplePayExample',
     'JVital2013/RoadApplePi',
     'raphaelhanneken/apple-juice',
     'kopiro/siriwave',
     'YasinZhou/ApplePayDemo',
     'MauriceConrad/iCloud-API',
     'nettlep/learn-swift',
     'jakarmy/swift-summary',
     'sergdort/CombineFeedback',
     'evermeer/EVCloudKitDao',
     'yubang/appletRecordDemo',
     'willard-yuan/CNN-for-Face-Image-Retrieval',
     'Gruppio/Sonoff-Homekit',
     'corpnewt/gibMacOS',
     'athlonreg/AppleALC-ALCPlugFix',
     'lorenzocadamuro/apple-fifth-avenue',
     'LeoNatan/Apple-Runtime-Headers',
     'archagon/tasty-imitation-keyboard',
     'leecrossley/cordova-plugin-apple-watch',
     'apple/swift-protobuf-plugin',
     'CyborgSecurity/PoisonApple',
     'pelauimagineering/apple-music-token-generator',
     'ananay/passport-apple',
     'DHowett/go-plist',
     'ToanTech/py-apple-dynamics',
     'GeneaLabs/laravel-sign-in-with-apple',
     'AsahiLinux/m1n1',
     'SamyPesse/tv.js',
     'HikariObfuscator/Hanabi',
     'andrehaveman/spotify-node-applescript',
     'szimek/sharedrop',
     'CalvinLoke/bad-apple',
     'maximkulkin/esp-homekit',
     'efremidze/Magnetic',
     'Piker-Alpha/AppleHDA8Series.sh',
     'mouredev/Apple-Developer-Roadmap',
     'phoboslab/JavaScriptCore-iOS',
     'elai950/AlertToast',
     'IdreesInc/Apple-Watch-Poketch',
     'maxkonovalov/MKRingProgressView',
     'mhlangagc/AppleNews-CollectionView',
     'SRGSSR/srgmediaplayer-apple',
     'suliveevil/AppleScript',
     'ridiculousfish/cdecl-blocks',
     'dschmenk/apple2pi',
     'learn-co-students/apples-and-holidays-prework',
     'GregWilson/react-native-apple-healthkit',
     'iineva/ipa-server',
     'pkluz/PKHUD',
     'google/GTMAppAuth',
     '0xbb/apple_set_os.efi',
     'NSSpiral/Blackb0x',
     'fernandotcl/pa-applet',
     'justeat/ApplePayJSSample',
     'smartykit/apple1',
     'mac4n6/APOLLO',
     'revblaze/AppleMusicUltra',
     'etsy/applepay-php',
     'appium/ios-uicatalog',
     'hmaidasani/RadialChartImageGenerator',
     'samuelngs/apple-emoji-linux',
     'kotelnik/plasma-applet-thermal-monitor',
     'ShadowsSide/Apple-News',
     'samartzidis/WinAppleKey',
     'psifidotos/applet-window-buttons',
     'MonitorControl/MonitorControl',
     'felixrieseberg/macintosh.js',
     'iCHAIT/awesome-macOS',
     'malus-security/sandblaster',
     'mParticle/mparticle-apple-sdk',
     'EalenXie/shiro-jwt-applet',
     'michaeleisel/zld',
     'dougallj/applegpu',
     'mkorenkov/ipad_charge',
     'zendframework/ZendService_Apple_Apns',
     'shuding/apple-pencil-safari-api-test',
     'usnistgov/applesec',
     'BilalReffas/EmojiIntelligence',
     'ryanb93/Applefy',
     'luxiangqiang/WeiXin_MessageApplet',
     'WilliamSellitti/ApplePicker',
     'xioxin/biliATV',
     'below/HelloSilicon',
     'openairplay/openairplay',
     'linappleii/linapple',
     'hamzasood/CustomWatchFaceTest',
     'meme/apple-tools',
     'Desgard/iOS-Source-Probe',
     'alangarf/apple-one',
     'chapter-three/AppleNewsAPI',
     'tlkh/asitop',
     'freitz85/AppleIISd',
     'willowtreeapps/sign-in-with-apple-button-android',
     'Timothylock/go-signin-with-apple',
     'react-native-tvos/react-native-tvos',
     'jwplayer/jw-showcase-appletv',
     'KhaosT/MacVM',
     'hollance/MobileNet-CoreML',
     'nov/apple_id',
     'Sephiroth87/ODRefreshControl',
     'bayetech/wechat_mall_applet_backend',
     'RamosLi/dbay-apns-for-java',
     'joeblau/apple-bundle-identifiers',
     'JxbSir/JxbScanQR',
     'aidansteele/osx-abi-macho-file-format-reference',
     'apple/tensorflow_macos',
     'micromdm/micromdm',
     'Toporin/SatochipApplet',
     'bjango/Bjango-Templates',
     'samkelleher/cordova-plugin-applepay',
     'tpoechtrager/apple-libtapi',
     'theturtle32/OSMF-AppleHLS',
     'cx-org/CombineX',
     'jtauber/applepy',
     'younghyunjo/esp32-homekit',
     'jlop007/apple-replica-starter-files',
     'hc660/ApplePicker',
     'vletoux/GidsApplet',
     'ipraba/EPContactsPicker',
     'cmdmnt/commandment',
     'positive-security/send-my',
     'Kito0615/AppIconAutoMaker',
     'kotelnik/plasma-applet-weather-widget',
     'naoufal/react-native-payments',
     'hengyunabc/zpush',
     'pia-foss/tunnel-apple',
     'pluwen/apple-device-model-list',
     'retroplasma/flyover-reverse-engineering',
     'mikeroyal/Apple-Silicon-Guide',
     'stevegrunwell/asimov',
     'VirgilClyne/iRingo',
     'xushaomin/apple-message',
     'superdashu/frida_with_wechat_applet',
     'WilliamHottzz/iBadApple',
     'learn-co-students/apples-and-holidays-online-web-sp-000',
     'insidegui/VirtualBuddy',
     'naoufal/react-native-safari-view',
     'samknight/slack_applescript',
     'djacobs/PyAPNs',
     'fernandospr/javapns-jdk16',
     'hououinkami/AppleTV',
     '738/awesome-apple-watch',
     'geekcomputers/Applescript',
     'WilsonGramer/AppleWelcomeScreen',
     'jaywcjlove/awesome-mac',
     'Zren/plasma-applets',
     'liukelin/create_appleid',
     'kevin-funderburg/AppleScripts',
     'ubuntu-mate/mate-dock-applet',
     'simonschellaert/spotify2am',
     'freinbichler/3d-touch',
     'patrickbussmann/oauth2-apple',
     'Redth/APNS-Sharp',
     'RavenSystem/esp-homekit-devices',
     'Cupcakus/AppleIIMini',
     'AppleCommander/AppleCommander',
     'Pr0Ger/PyAPNs2',
     'martinkahr/apple_remote_control',
     'capacitor-community/apple-sign-in',
     'psifidotos/applet-window-appmenu',
     'CoderZhuXH/XHLaunchAd',
     'hackedteam/shshget',
     'hjuutilainen/sus-inspector',
     'aaronpk/sign-in-with-apple-example',
     'mtford90/react-native-watch-connectivity',
     'agencyenterprise/react-native-health',
     'NoahFetz/F1AppleTV',
     'tdda/applehealthdata',
     'arekinath/PivApplet',
     'ChinaVolvocars/WeChat-applet',
     'lvwzhen/apple-icon',
     'lacostej/apple-dev',
     'applest/node-applest-atem',
     'davepwsmith/zotpick-applescript',
     'HouCoder/asrock-z370m-pro4-hackintosh',
     'zsh-users/zsh-apple-touchbar',
     'ssut/ffmpeg-on-apple-silicon',
     'SFSafeSymbols/SFSafeSymbols',
     'postlund/pyatv',
     'bruienne/bsdpy',
     'benvanik/node-airplay',
     'mmattozzi/cocoa-rest-client',
     'appleseedproj/appleseed',
     'bazelbuild/rules_swift',
     'globchastyy/SwiftUIImageEffects',
     'asheigithub/apple-juice-actionscript',
     'firecore/Seas0nPass',
     'RichardBronosky/AppleScript-droplet',
     'kvyatkovskys/KVKCalendar',
     'ToanTech/py-apple-structure',
     'peripheryapp/periphery',
     'samselikoff/ios-apple-music-clone',
     'hyxbiao/smallapple',
     'JuliaMath/AppleAccelerate.jl',
     'erikberglund/AppleNVRAM',
     'youknowone/itunes-iap',
     'WrathChaos/react-native-apple-card-views',
     'kozyilmaz/zcash-apple',
     'Techofficer/node-apple-signin',
     'Ponytech/appstoreconnectapi',
     'NativeScript/sample-Groceries',
     'kendfinger/AppleCache',
     'devartis/passbook',
     'rahulrj/Apple-Music-Animation',
     'Wizcorp/node-iap',
     'vineetchoudhary/Apple-iOS-MDM-Server',
     'processout/applepay',
     'indragiek/INDANCSClient',
     'blaisck/sfwin',
     'A-Tokyo/apple-signin-auth',
     'AsahiLinux/macvdmtool',
     'LuisThein/apple_maps_flutter',
     'cedws/apple-telemetry',
     'Zren/plasma-applet-tiledmenu',
     'bortuzar/PHP-Mysql---Apple-Push-Notification-Server',
     'grafov/m3u8',
     'beezwax/WP-Publish-to-Apple-News',
     'sleekbyte/tailor',
     'OpenCombine/OpenCombine',
     'HarshilShah/DeckTransition',
     'robertklep/quotefixformac',
     'jerryliurui/AppleWatchDemo',
     'jazzychad/PushServer',
     'squeed/AppleRemoteSender',
     'BigZaphod/Chameleon',
     'neurolabusc/AppleSiliconForNeuroimaging',
     'scotteg/LayerPlayer',
     'tinovyatkin/pass-js',
     'carlosonunez/obs-installer-for-apple-silicon',
     'nathangitter/fluid-interfaces',
     'olddonkey/ShadowImageView',
     'YuAo/YUCIHighPassSkinSmoothing',
     'spree/spree_gateway',
     'PayU-EMEA/apple-pay',
     'Dzinlife/Apple-Watch-Spring-Board',
     'iOSDevLog/com.apple.amp.itmstransporter',
     'nihui/waifu2x-ncnn-vulkan',
     'insidegui/AppleRemoteFramework',
     'SASUKE-DUCK/AppleMusic-Downloader',
     'microg/AppleWifiNlpBackend',
     'JoeBaeza/AppleTVdns',
     'at-internet/atinternet-apple-sdk',
     'teaey/apns4j',
     'googlearchive/appr-wrapper',
     'zfkun/node-airplay',
     'BenjaminFavre/keycloak-apple-social-identity-provider',
     'Lakr233/AppleSiliconUIKitPatch',
     'Dunedan/mbp-2016-linux',
     'psifidotos/applet-window-title',
     '3ximus/aerial-sddm-theme',
     'radianttap/CardPresentationController',
     'ZhaoKaiQiang/AppleWatchView',
     'pooriaazimi/BetterDictionary',
     'onepixelaway/AppleTVParallaxIcons',
     'xushaomin/apple-pay',
     'halturin/applepay',
     'TDenisM/APPLE-TV-4K-Downloader',
     '0x36/oob_events',
     'akornor/playlistor',
     'hollance/neural-engine',
     'tomavic/cordova-apple-wallet',
     'defeatedcrow/AppleMilkTea2_1.7.10',
     'rlfrahm/capacitor-apple-login',
     'micnews/apple-news',
     'accforgit/blog-data',
     'tebl/RC6502-Apple-1-Replica',
     'carpedm20/simulated-unsupervised-tensorflow',
     'ludwig-v/wireless-carplay-dongle-reverse-engineering',
     'cxxrev0to1dev/apple_tools',
     'Jinmo/applescript-disassembler',
     'boredazfcuk/docker-icloudpd',
     'elite-lang/RedApple',
     'liuziangexit/HEIF-Utility',
     'nicholasbs/appletoo',
     'genadyo/LivePhotoDemo',
     'nicokaiser/passport-apple',
     'Ramalama2/Apple',
     'odarriba/docker-timemachine',
     'rnc-archive/apple-authentication',
     'SystangoTechnologies/react-native-apple-authentication',
     'wangkuiwu/android_applets',
     'efremidze/Shiny',
     'libimobiledevice/libplist',
     'tomieq/AppleCrashScripts',
     'samdmarshall/OSXPrivateSDK',
     'nicolaihaeni/MinneApple',
     'xushaomin/apple-ums-server',
     'falcon78/Vusic',
     'insanoid/Apple-Store-Reserve-Monitor',
     'franton/CIS-Apple-Security-Casper',
     'insanelydeepak/AppleHDAPatcher',
     'hulu/GrannySmith',
     'arjunkomath/sign-in-with-apple-js-node-example',
     'xushaomin/apple-qos',
     'Luukdegram/apple_pie',
     'DeepLearningKit/DeepLearningKit',
     'WeeTom/BasicChatUIOnAppleWatch',
     'maxbbraun/pisight',
     'twogate/cordova-plugin-sign-in-with-apple',
     'PatMurrayDEV/apple-music-history',
     'antongorodezkiy/codeigniter-apns',
     'lifepillar/CSVKeychain',
     'lprhodes/homebridge-apple-tv',
     'lvsti/CoreMediaIO-DAL-Example',
     'xamarin/apple-api-docs',
     'realtnt/AppleID-Verification-AppleScirpt',
     'learn-co-students/apples-and-holidays-online-web-prework',
     'seemoo-lab/openhaystack'
]

headers = {"Authorization": f"token {github_token}", "User-Agent": github_username}

if headers["Authorization"] == "token " or headers["User-Agent"] == "":
    raise Exception(
        "You need to follow the instructions marked TODO in this script before trying to use it"
    )


def github_api_request(url: str) -> Union[List, Dict]:
    response = requests.get(url, headers=headers)
    response_data = response.json()
    if response.status_code != 200:
        raise Exception(
            f"Error response from github api! status code: {response.status_code}, "
            f"response: {json.dumps(response_data)}"
        )
    return response_data


def get_repo_language(repo: str) -> str:
    url = f"https://api.github.com/repos/{repo}"
    repo_info = github_api_request(url)
    if type(repo_info) is dict:
        repo_info = cast(Dict, repo_info)
        if "language" not in repo_info:
            raise Exception(
                "'language' key not round in response\n{}".format(json.dumps(repo_info))
            )
        return repo_info["language"]
    raise Exception(
        f"Expecting a dictionary response from {url}, instead got {json.dumps(repo_info)}"
    )


def get_repo_contents(repo: str) -> List[Dict[str, str]]:
    url = f"https://api.github.com/repos/{repo}/contents/"
    contents = github_api_request(url)
    if type(contents) is list:
        contents = cast(List, contents)
        return contents
    raise Exception(
        f"Expecting a list response from {url}, instead got {json.dumps(contents)}"
    )


def get_readme_download_url(files: List[Dict[str, str]]) -> str:
    """
    Takes in a response from the github api that lists the files in a repo and
    returns the url that can be used to download the repo's README file.
    """
    for file in files:
        if file["name"].lower().startswith("readme"):
            return file["download_url"]
    return ""


def process_repo(repo: str) -> Dict[str, str]:
    """
    Takes a repo name like "gocodeup/codeup-setup-script" and returns a
    dictionary with the language of the repo and the readme contents.
    """
    contents = get_repo_contents(repo)
    readme_download_url = get_readme_download_url(contents)
    if readme_download_url == "":
        readme_contents = ""
    else:
        readme_contents = requests.get(readme_download_url).text
    return {
        "repo": repo,
        "language": get_repo_language(repo),
        "readme_contents": readme_contents,
    }


def scrape_github_data() -> List[Dict[str, str]]:
    """
    Loop through all of the repos and process them. Returns the processed data.
    """
    return [process_repo(repo) for repo in REPOS]


if __name__ == "__main__":
    data = scrape_github_data()
    json.dump(data, open("data.json", "w"), indent=1)
